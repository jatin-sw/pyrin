[general]

# default rsa key length in bits.
rsa_default_key_length: 2048

# default size of generated secure random value in bytes.
default_secure_random_size: 32

# secret key.
secret_key: none

# trusted ips to accept requests from.
# example: (*, 192.168.3.43)
trusted_ips: (*,)

# minimum android client version to accept requests from.
# example: (1, 2, 25)
min_android_version: (0, 0, 0)

# minimum ios client version to accept requests from.
# example: (1, 2, 25)
min_ios_version: (0, 0, 0)

# minimum web client version to accept requests from.
# example: (1, 2, 25)
min_web_version: (0, 0, 0)

# set cookies to httponly.
session_cookie_httponly: true

# set cookies to secure.
session_cookie_secure: true

[hashing]

# rounds to make hashes using bcrypt.
bcrypt_rounds: 13

# rounds to make hashes using pbkdf2.
# the golden rule to be followed is 2^(year-2000) iterations.
pbkdf2_rounds: 500000

# hashing algorithm to be used with pbkdf2.
pbkdf2_internal_algorithm: sha256

# pbkdf2 salt length in bytes.
pbkdf2_salt_length: 32

# default handler to be used for hashing.
default_hashing_handler: PBKDF2

[token]

# access token lifetime in seconds, after this duration, client must get a
# new access token by providing a refresh token to server.
# default value is 1800 seconds (30 minutes).
access_token_lifetime: 1800

# refresh token lifetime in seconds, after this duration, client must get a
# new access and refresh token by providing credentials to server.
# default value is 2592000 seconds (30 days).
refresh_token_lifetime: 2592000

# hs256 key for signing tokens.
hs256_key: none

# hs256 key length in bytes.
hs256_key_length = 32

# rs256 public key for decoding tokens.
rs256_public_key: none

# rs256 private key for encoding tokens.
rs256_private_key: none

# default handler to be used for tokens.
default_token_handler: RS256

[encryption]

# aes128 key for encryption and decryption.
aes128_key: none

# rsa public key for encryption.
rsa256_public_key: none

# rsa private key for decryption.
rsa256_private_key: none

# default handler to be used for encryption.
default_encryption_handler: RSA256
